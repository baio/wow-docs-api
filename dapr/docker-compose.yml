version: '3'
services:
  seq:
    image: datalust/seq:latest
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5340:80"
    networks:
      - vow-dapr
  
  zipkin:
    image: openzipkin/zipkin-slim
    ports:
      - "5411:9411"
    networks:
      - vow-dapr
  
  ############################
  # read-file + Dapr sidecar
  ############################
  read-file:
    build:
      context: ./fsharp
      dockerfile: ReadFile/Dockerfile         
    ports:
      - "3001:3000"
    environment: 
      - PORT=3000
      - SeqHost=http://seq
      - ElasticHost=
    depends_on:
      - redis
      - placement
    networks:
      - vow-dapr
  read-file-dapr:
    image: "daprio/daprd:1.2.0"
    command: ["./daprd",
     "-app-id", "read-file",
     "-app-port", "3000",
     "-placement-host-address", "placement:50006",
     "-components-path", "/dapr/components",
     "-config", "/dapr/config.yaml"]
    volumes:
        - "./dapr/:/dapr"
    depends_on:
      - read-file
    network_mode: "service:read-file"

  ############################
  # events-store + Dapr sidecar
  ############################
  events-store:
    build:
      context: ./fsharp
      dockerfile: EventsStore/Dockerfile         
    ports:
      - "3002:3000"
    environment: 
      - PORT=3000
      - SeqHost=http://seq
      - ElasticHost=
    depends_on:
      - redis
      - placement
    networks:
      - vow-dapr
  events-store-dapr:
    image: "daprio/daprd:1.2.0"
    command: ["./daprd",
     "-app-id", "events-store",
     "-app-port", "3000",
     "-placement-host-address", "placement:50006",
     "-components-path", "/dapr/components",
     "-config", "/dapr/config.yaml"]
    volumes:
        - "./dapr/:/dapr"
    depends_on:
      - events-store
    network_mode: "service:events-store"
  ############################
  # store-doc + Dapr sidecar
  ############################
  store-doc:
    build:
      context: ./fsharp
      dockerfile: StoreDoc/Dockerfile         
    ports:
      - "3003:3000"
    environment: 
      - PORT=3000
      - SeqHost=http://seq
      - ElasticHost=
    depends_on:
      - redis
      - placement
    networks:
      - vow-dapr
  store-doc-dapr:
    image: "daprio/daprd:1.2.0"
    command: ["./daprd",
      "-app-id", "store-doc",
      "-app-port", "3000",
      "-placement-host-address", "placement:50006",
      "-components-path", "/dapr/components",
      "-config", "/dapr/config.yaml"]
    volumes:
      - "./dapr/:/dapr"
    depends_on:
      - store-doc
    network_mode: "service:store-doc"
  ############################
  # ya-ocr + Dapr sidecar
  ############################
  ya-ocr:
    build:
      context: ./fsharp
      dockerfile: YaOCR/Dockerfile         
    ports:
      - "3004:3000"
    environment: 
      - PORT=3000
      - SeqHost=http://seq
      - ElasticHost=
    depends_on:
      - redis
      - placement
    networks:
      - vow-dapr
  ya-ocr-dapr:
    image: "daprio/daprd:1.2.0"
    command: ["./daprd",
      "-app-id", "ya-ocr",
      "-app-port", "3000",
      "-placement-host-address", "placement:50006",
      "-components-path", "/dapr/components",
      "-config", "/dapr/config.yaml"]
    volumes:
      - "./dapr/:/dapr"
    depends_on:
      - ya-ocr
    network_mode: "service:ya-ocr"
    
  ############################
  # Dapr placement service
  ############################
  placement:
    image: "daprio/dapr"
    command: ["./placement", "-port", "50006"]
    ports:
      - "50006:50006"
    networks:
      - vow-dapr
  ############################
  # Redis state store
  ############################
  redis:
    image: "redis:alpine"
    ports:
      - "6380:6379"
    networks:
      - vow-dapr
networks:
    vow-dapr: